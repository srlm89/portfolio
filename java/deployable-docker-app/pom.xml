<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>xxl.java</groupId>
    <artifactId>deployable-docker-app</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <properties>
        <java.version>1.8</java.version>
        <slf4j.version>1.7.7</slf4j.version>
        <junit.version>4.12</junit.version>
        <jooq.version>3.7.3</jooq.version>
        <postgres.version>9.4.1208.jre7</postgres.version>
        <properties-filename>default.properties.safe</properties-filename>
        <maven-compiler-plugin.version>3.5.1</maven-compiler-plugin.version>
        <maven-assembly-plugin.version>2.6</maven-assembly-plugin.version>
        <maven-dependency-plugin.version>2.10</maven-dependency-plugin.version>
        <maven-release-plugin.version>2.5.2</maven-release-plugin.version>
        <maven-docker-plugin.version>0.15.9</maven-docker-plugin.version>
        <maven-flyway-plugin.version>3.2.1</maven-flyway-plugin.version>
        <properties-maven-plugin.version>1.0-alpha-2</properties-maven-plugin.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven-plugin-docker-postgres.port>49153</maven-plugin-docker-postgres.port>
        <maven-plugin-docker-postgres.user>dwight</maven-plugin-docker-postgres.user>
        <maven-plugin-docker-postgres.pass>lasagne</maven-plugin-docker-postgres.pass>
        <maven-plugin-docker-postgres.image>postgres:9.5</maven-plugin-docker-postgres.image>
        <maven-plugin-docker-postgres.name>deployable_docker_app_it</maven-plugin-docker-postgres.name>
        <maven-plugin-jooq-codegen.package>xxl.java.jooq</maven-plugin-jooq-codegen.package>
        <deploy-docker-dir.path>${project.basedir}/deploy/docker</deploy-docker-dir.path>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-meta</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-codegen</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>
        <dependency>
            <scope>test</scope>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
    </dependencies>

    <build>

        <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.properties</include>
                </includes>
            </resource>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>**/*.properties</exclude>
                </excludes>
            </resource>
        </resources>

        <testResources>
            <testResource>
                <directory>${project.basedir}/src/test/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.properties</include>
                </includes>
            </testResource>
            <testResource>
                <directory>${project.basedir}/src/test/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>**/*.properties</exclude>
                </excludes>
            </testResource>
        </testResources>

        <plugins>
            <!-- WARNING: Success of compilation depends on the order of the plugins -->
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <testSource>${java.version}</testSource>
                        <testTarget>${java.version}</testTarget>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven-assembly-plugin.version}</version>
                    <configuration>
                        <descriptorRefs>
                            <descriptorRef>jar-with-dependencies</descriptorRef>
                        </descriptorRefs>
                        <finalName>${project.artifactId}</finalName>
                        <appendAssemblyId>true</appendAssemblyId>
                    </configuration>
                    <executions>
                        <execution>
                            <id>make-assembly</id>
                            <phase>package</phase>
                            <goals>
                                <goal>single</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>${maven-release-plugin.version}</version>
                    <configuration>
                        <updateWorkingCopyVersions>true</updateWorkingCopyVersions>
                        <autoVersionSubmodules>true</autoVersionSubmodules>
                        <preparationGoals>clean install</preparationGoals>
                        <goals>clean deploy</goals>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>properties-maven-plugin</artifactId>
                    <version>${properties-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <phase>initialize</phase>
                            <goals>
                                <goal>read-project-properties</goal>
                            </goals>
                            <configuration>
                                <files>
                                    <file>${project.basedir}/conf/default.properties.safe</file>
                                    <file>${project.basedir}/conf/${properties-filename}</file>
                                </files>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                <!-- This plugins creates a postgres docker -->
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${maven-docker-plugin.version}</version>
                    <executions>
                        <execution>
                            <phase>generate-sources</phase>
                            <id>docker-start</id>
                            <goals>
                                <goal>start</goal>
                            </goals>
                        </execution>
                        <execution>
                            <phase>clean</phase>
                            <id>docker-stop</id>
                            <goals>
                                <goal>stop</goal>
                            </goals>
                            <configuration>
                                <keepRunning>false</keepRunning>
                                <keepContainer>false</keepContainer>
                                <removeVolumes>false</removeVolumes>
                            </configuration>
                        </execution>
                    </executions>
                    <configuration>
                        <watchInterval>500</watchInterval>
                        <logDate>default</logDate>
                        <autoPull>always</autoPull>
                        <watchPostGoal>org.apache.maven.plugins:maven-help-plugin:help</watchPostGoal>
                        <images>
                            <image>
                                <name>${maven-plugin-docker-postgres.image}</name>
                                <alias>${maven-plugin-docker-postgres.name}</alias>
                                <run>
                                    <namingStrategy>alias</namingStrategy>
                                    <privileged>true</privileged>
                                    <ports>
                                        <port>${maven-plugin-docker-postgres.port}:5432</port>
                                    </ports>
                                    <env>
                                        <POSTGRES_USER>${maven-plugin-docker-postgres.user}</POSTGRES_USER>
                                        <POSTGRES_PASSWORD>${maven-plugin-docker-postgres.pass}</POSTGRES_PASSWORD>
                                    </env>
                                    <volumes>
                                        <bind>
                                            <volume>${deploy-docker-dir.path}/volumes/postgres/data:/var/lib/postgresql/data</volume>
                                        </bind>
                                    </volumes>
                                    <wait>
                                        <time>3000</time>
                                    </wait>
                                </run>
                            </image>
                        </images>
                    </configuration>
                </plugin>

                <plugin>
                <!-- This plugin runs migrations on the created postgres docker -->
                    <groupId>org.flywaydb</groupId>
                    <artifactId>flyway-maven-plugin</artifactId>
                    <version>${maven-flyway-plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.postgresql</groupId>
                            <artifactId>postgresql</artifactId>
                            <version>${postgres.version}</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>migrate</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <baselineOnMigrate>true</baselineOnMigrate>
                        <user>${maven-plugin-docker-postgres.user}</user>
                        <password>${maven-plugin-docker-postgres.pass}</password>
                        <url>jdbc:postgresql://localhost:${maven-plugin-docker-postgres.port}/</url>
                        <schemas>
                            <schema>bogus</schema>
                        </schemas>
                        <locations>
                            <location>filesystem:src/main/psql/migration/bogus</location>
                        </locations>
                    </configuration>
                </plugin>

                <plugin>
                <!-- This plugin generates java code from the schemas of postgres docker -->
                    <groupId>org.jooq</groupId>
                    <artifactId>jooq-codegen-maven</artifactId>
                    <version>${jooq.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.postgresql</groupId>
                            <artifactId>postgresql</artifactId>
                            <version>${postgres.version}</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>generate</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <jdbc>
                            <driver>org.postgresql.Driver</driver>
                            <user>${maven-plugin-docker-postgres.user}</user>
                            <password>${maven-plugin-docker-postgres.pass}</password>
                            <url>jdbc:postgresql://localhost:${maven-plugin-docker-postgres.port}/</url>
                        </jdbc>
                        <generator>
                            <database>
                                <name>org.jooq.util.postgres.PostgresDatabase</name>
                                <includes>.*</includes>
                                <excludes/>
                                <schemata>
                                    <schema>
                                        <inputSchema>bogus</inputSchema>
                                    </schema>
                                </schemata>
                            </database>
                            <target>
                                <packageName>${maven-plugin-jooq-codegen.package}</packageName>
                                <directory>target/generated-sources/jooq</directory>
                            </target>
                        </generator>
                    </configuration>
                </plugin>

                <plugin>
                    <!-- This plugin copies the generated jar-with-dependencies to folder deploy/ -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven-dependency-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>copy</id>
                            <phase>package</phase>
                            <goals>
                                <goal>copy</goal>
                            </goals>
                            <configuration>
                                <artifactItems>
                                    <artifactItem>
                                        <groupId>${project.groupId}</groupId>
                                        <artifactId>${project.artifactId}</artifactId>
                                        <version>${project.version}</version>
                                        <overWrite>true</overWrite>
                                        <classifier>jar-with-dependencies</classifier>
                                        <outputDirectory>${deploy-docker-dir.path}/app</outputDirectory>
                                        <destFileName>${project.artifactId}.jar</destFileName>
                                        <type>jar</type>
                                    </artifactItem>
                                </artifactItems>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

            </plugins>
        </pluginManagement>
    </build>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.jooq</groupId>
                <artifactId>jooq</artifactId>
                <version>${jooq.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-meta</artifactId>
                <version>${jooq.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen</artifactId>
                <version>${jooq.version}</version>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgres.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

</project>
